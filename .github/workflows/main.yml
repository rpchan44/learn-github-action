name: Publish Docker image and update Kustomize

on:
  push:
    branches: ['main']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub and Update Kustomize
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the current repository
      - name: Check out the repo with Dockerfile
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Extract metadata (tags, labels) for Docker
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: rpchan44/nodejs-app

      # Step 4: Log Docker version (optional but useful for debugging)
      - name: Log Docker version
        run: docker --version

      # Step 5: Cache Docker layers (optional)
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Step 6: Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            rpchan44/nodejs-app:latest
            rpchan44/nodejs-app:${{ github.sha }}
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Step 7: Check out the Kustomize repository
      
      - name: Check out the Kustomize repository
        uses: actions/checkout@v4
        with:
          repository: rpchan44/learn-kustomize
          token: ${{ secrets.GH_TOKEN }}
          path: overlays  # Check out into a subdirectory
      # Step 7a: List check out files from repository  
      - name: Listing all files
        run: |
          echo "Checking Files ....."
          ls -alh *

      # Step 8: Update kustomization.yaml with the new image tag
      - name: Update Kustomize manifest with new image
        run: |
          echo "Updating kustomization.yaml to use the latest image tag"
          IMAGE_TAG=${{ steps.meta.outputs.tags }}
          
          # Assuming your Kustomize overlay is in the 'kustomize-repo/k8s/overlays/dev/kustomization.yaml'
          sed -i "s|version=.*|version=$IMAGE_TAG|" dev/kustomization.yaml

      # Step 9: Commit the changes to the Kustomize repository
      - name: Commit changes to Kustomize repository
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@githu"
          git add ./kustomize-repo/k8s/overlays/dev/kustomization.yaml
          git commit -m "Update Docker image tag in kustomization.yaml"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # GitHub token for authentication
